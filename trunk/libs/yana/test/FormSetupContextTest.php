<?php

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../formsetupcontext.class.php';

/**
 * Test class for FormSetupContext.
 * Generated by PHPUnit on 2011-04-14 at 02:14:23.
 */
class FormSetupContextTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var FormSetupContext
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new FormSetupContext();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @todo Implement testGetValue().
     */
    public function testGetValue()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetValues().
     */
    public function testGetValues()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetValue().
     */
    public function testSetValue()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetValues().
     */
    public function testSetValues()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @test
     */
    public function testSetAction()
    {
        $this->assertEquals('functionName', $this->object->setAction('functionName')->getAction());
    }

    /**
     * @test
     */
    public function testGetAction()
    {
        $this->assertEquals('', $this->object->getAction());
    }

    /**
     * @test
     */
    public function testGetColumnNames()
    {
        $this->assertEquals(array(), $this->object->getColumnNames());
    }

    /**
     * @test
     */
    public function testSetColumnNames()
    {
        $columnNames = array('a', 'B', 'Ä');
        $this->assertEquals($columnNames, $this->object->setColumnNames($columnNames)->getColumnNames());
    }

}

?>