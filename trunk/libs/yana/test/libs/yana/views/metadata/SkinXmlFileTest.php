<?php

namespace Yana\Views\MetaData;

require_once dirname(__FILE__) . '/../../../../../views/metadata/skinxmlfile.php';

/**
 * Test class for SkinXmlFile.
 * Generated by PHPUnit on 2012-09-18 at 00:00:46.
 */
class SkinXmlFileTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var SkinXmlFile
     */
    protected $object = null;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $xml = '<?xml version="1.0" encoding="utf-8" ?>
                <skin>
                    <head>
                        <title>Default</title>
                        <author>Erik</author>
                        <author>Tom</author>
                        <url>http://test.url</url>
                        <description>default description</description>
                        <description lang="en">en description</description>
                    </head>
                    <body>
                        <template id="FOO" file="null://file.tpl">
                            <script>null://script1.js</script>
                            <script>null://script2.js</script>
                            <style id="test">null://style1.css</style>
                            <language>default</language>
                        </template>
                    </body>
                </skin>';
        $this->object = new \Yana\Views\MetaData\SkinXmlFile($xml);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $streamFacade = new \Yana\Files\Streams\Stream();
        if ($streamFacade->isRegistered('null')) {
            $streamFacade->unregisterWrapper('null');
        }
    }

    /**
     * @test
     */
    public function testGetTitle()
    {
        $this->assertEquals('Default', $this->object->getTitle());
    }

    /**
     * @todo Implement testGetDescription().
     */
    public function testGetDescription()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @test
     */
    public function testGetAuthor()
    {
        $this->assertEquals('Erik, Tom', $this->object->getAuthor());
    }

    /**
     * @test
     */
    public function testGetUrl()
    {
        $this->assertEquals('http://test.url', $this->object->getUrl());
    }

    /**
     * @test
     */
    public function testGetTemplates()
    {
        $streamFacade = new \Yana\Files\Streams\Stream();
        if (!$streamFacade->isRegistered('null')) {
            $streamFacade->registerWrapper('null');
            file_put_contents('null://file.tpl', 'dummy');
            file_put_contents('null://script1.js', 'dummy');
            file_put_contents('null://script2.js', 'dummy');
            file_put_contents('null://style1.css', 'dummy');
        }
        $templates = $this->object->getTemplates();
        $this->assertEquals(1, count($templates));
        $this->assertArrayHasKey('FOO', $templates);
        $template = $templates['FOO'];
        $this->assertEquals('FOO', $template->getId());
        $this->assertEquals('null://file.tpl', $template->getFile());
        $this->assertEquals(array('null://script1.js', 'null://script2.js'), $template->getScripts());
        $this->assertEquals(array('test' => 'null://style1.css'), $template->getStyles());
        $this->assertEquals(array('default'), $template->getLanguages());
    }

}

?>
