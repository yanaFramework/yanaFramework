<?php

namespace Yana\Http;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-03-24 at 17:11:17.
 */
class FacadeTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var \Yana\Http\Facade
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new \Yana\Http\Facade();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @test
     */
    public function testFiles()
    {
        $this->assertTrue($this->object->files() instanceof \Yana\Http\Uploads\IsUploadWrapper);
    }

    /**
     * @test
     */
    public function testAll()
    {
        $this->assertTrue($this->object->all() instanceof \Yana\Http\Requests\ValueWrapper);
    }

    /**
     * @test
     */
    public function testArgs()
    {
        $this->assertTrue($this->object->args() instanceof \Yana\Http\Requests\ValueWrapper);
    }

    /**
     * @test
     */
    public function testGet()
    {
        $this->assertTrue($this->object->get() instanceof \Yana\Http\Requests\ValueWrapper);
    }

    /**
     * @test
     */
    public function testPost()
    {
        $this->assertTrue($this->object->post() instanceof \Yana\Http\Requests\ValueWrapper);
    }

    /**
     * @test
     */
    public function testCookie()
    {
        $this->assertTrue($this->object->cookie() instanceof \Yana\Http\Requests\ValueWrapper);
    }

    /**
     * @test
     */
    public function testRequest()
    {
        $this->assertTrue($this->object->request() instanceof \Yana\Http\Requests\ValueWrapper);
    }

    /**
     * @test
     */
    public function testMethod()
    {
        $this->assertTrue($this->object->method() instanceof \Yana\Http\Requests\Method);
    }

    /**
     * @test
     */
    public function testIsAjaxRequest()
    {
        $this->assertFalse($this->object->isAjaxRequest());
    }

    /**
     * @test
     */
    public function testUri()
    {
        $this->assertTrue(is_string($this->object->uri()));
    }

}
